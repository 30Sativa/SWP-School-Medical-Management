import React, { useState, useEffect } from "react";
import Sidebar from "../../components/sb-Parent/Sidebar";
import styles from "../../assets/css/NotificationAndReport.module.css";
import axios from "axios";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

const NotificationAndReport = () => {
  const [studentName, setStudentName] = useState("");
  const [pendingRequests, setPendingRequests] = useState([]);
  const [approvedRequests, setApprovedRequests] = useState([]);
  const [declinedRequests, setDeclinedRequests] = useState([]);
  const [declineReason, setDeclineReason] = useState("");
  const [selectedRequestId, setSelectedRequestId] = useState(null);

  const studentId = localStorage.getItem("studentId");

  useEffect(() => {
    fetchStudentInfo();
    fetchConsentRequests();
  }, []);

  const fetchStudentInfo = async () => {
    try {
      const res = await axios.get(
        `https://swp-school-medical-management.onrender.com/api/Student/${studentId}`
      );
      setStudentName(res.data?.data?.fullName || "");
    } catch (err) {
      console.error("Kh√¥ng l·∫•y ƒë∆∞·ª£c th√¥ng tin h·ªçc sinh:", err);
    }
  };

  const fetchConsentRequests = async () => {
    try {
      const res = await axios.get(
        `https://swp-school-medical-management.onrender.com/api/VaccinationCampaign/consent-requests/student/${studentId}`
      );
      const data = res.data?.data || [];

      setPendingRequests(data.filter(item => item.consentStatusName === "Ch·ªù x√°c nh·∫≠n"));
      setApprovedRequests(data.filter(item => item.consentStatusName === "ƒê·ªìng √Ω"));
      setDeclinedRequests(data.filter(item => item.consentStatusName === "T·ª´ ch·ªëi"));
    } catch (err) {
      console.error("Kh√¥ng l·∫•y ƒë∆∞·ª£c danh s√°ch phi·∫øu ƒë·ªìng √Ω:", err);
      toast.error("L·ªói khi t·∫£i d·ªØ li·ªáu phi·∫øu ƒë·ªìng √Ω.");
    }
  };

  const handleConsent = async (requestId, agree) => {
    if (!agree && declineReason.trim() === "") {
      toast.warning("Vui l√≤ng nh·∫≠p l√Ω do t·ª´ ch·ªëi.");
      return;
    }

    try {
      const payload = {
        consentStatusId: agree ? 2 : 3,
        consentReason: agree ? null : declineReason,
      };

      await axios.put(
        `https://swp-school-medical-management.onrender.com/api/VaccinationCampaign/consent-requests/${requestId}`,
        payload
      );

      toast.success("Ph·∫£n h·ªìi th√†nh c√¥ng!");
      fetchConsentRequests();
      setSelectedRequestId(null);
      setDeclineReason("");
    } catch (err) {
      console.error("L·ªói khi g·ª≠i ph·∫£n h·ªìi:", err);
      toast.error("Kh√¥ng th·ªÉ g·ª≠i ph·∫£n h·ªìi!");
    }
  };

  return (
    <div className={styles.container}>
      <ToastContainer />
      <Sidebar />
      <div className={styles.content}>
        <h2 className={styles.title}>Th√¥ng B√°o & Ph·∫£n H·ªìi</h2>
        <p className={styles.subtitle}>
          Xin ch√†o, b·∫°n ƒëang ƒëƒÉng nh·∫≠p v·ªõi t∆∞ c√°ch ph·ª• huynh em <strong>{studentName || "..."}</strong>
        </p>

        {/* Phi·∫øu ch·ªù x√°c nh·∫≠n */}
        <div className={styles.listWrapper}>
          <h3>üìã Phi·∫øu x√°c nh·∫≠n tham gia chi·∫øn d·ªãch y t·∫ø</h3>
          {pendingRequests.length === 0 ? (
            <p>Kh√¥ng c√≥ phi·∫øu n√†o c·∫ßn ph·∫£n h·ªìi.</p>
          ) : (
            pendingRequests.map((item) => (
              <div className={styles.card} key={item.requestId}>
                <h4>{item.campaignName}</h4>
                <p><strong>H·ªçc sinh:</strong> {item.studentName}</p>
                <p><strong>Ng√†y g·ª≠i:</strong> {new Date(item.requestDate).toLocaleDateString("vi-VN")}</p>

                <div className={styles.responseActions}>
                  <button
                    className={styles.approve}
                    onClick={() => handleConsent(item.requestId, true)}
                  >
                    ‚úÖ ƒê·ªìng √Ω
                  </button>
                  <button
                    className={styles.decline}
                    onClick={() => setSelectedRequestId(item.requestId)}
                  >
                    ‚ùå T·ª´ ch·ªëi
                  </button>
                </div>

                {selectedRequestId === item.requestId && (
                  <div className={styles.reasonBox}>
                    <textarea
                      placeholder="Nh·∫≠p l√Ω do t·ª´ ch·ªëi..."
                      value={declineReason}
                      onChange={(e) => setDeclineReason(e.target.value)}
                    />
                    <button
                      className={styles.confirmDecline}
                      onClick={() => handleConsent(item.requestId, false)}
                    >
                      G·ª≠i l√Ω do
                    </button>
                  </div>
                )}
              </div>
            ))
          )}
        </div>

        {/* Phi·∫øu ƒë√£ ƒë·ªìng √Ω */}
        <div className={styles.listWrapper}>
          <h3>üìã Phi·∫øu ƒë·ªìng √Ω ƒë√£ tham gia chi·∫øn d·ªãch y t·∫ø</h3>
          {approvedRequests.length === 0 ? (
            <p>Kh√¥ng c√≥ phi·∫øu n√†o.</p>
          ) : (
            approvedRequests.map((item) => (
              <div className={styles.card} key={item.requestId}>
                <h4>{item.campaignName}</h4>
                <p><strong>H·ªçc sinh:</strong> {item.studentName}</p>
                <p><strong>Ng√†y ph·∫£n h·ªìi:</strong> {new Date(item.updatedAt || item.requestDate).toLocaleDateString("vi-VN")}</p>
                <p><strong>Tr·∫°ng th√°i:</strong> ‚úÖ ƒê√£ ƒë·ªìng √Ω</p>
              </div>
            ))
          )}
        </div>

        {/* Phi·∫øu ƒë√£ t·ª´ ch·ªëi */}
        <div className={styles.listWrapper}>
          <h3>üìã Phi·∫øu kh√¥ng ƒë·ªìng √Ω tham gia chi·∫øn d·ªãch y t·∫ø</h3>
          {declinedRequests.length === 0 ? (
            <p>Kh√¥ng c√≥ phi·∫øu n√†o.</p>
          ) : (
            declinedRequests.map((item) => (
              <div className={styles.card} key={item.requestId}>
                <h4>{item.campaignName}</h4>
                <p><strong>H·ªçc sinh:</strong> {item.studentName}</p>
                <p><strong>Ng√†y ph·∫£n h·ªìi:</strong> {new Date(item.updatedAt || item.requestDate).toLocaleDateString("vi-VN")}</p>
                <p><strong>L√Ω do t·ª´ ch·ªëi:</strong> {item.consentReason || "Kh√¥ng c√≥"}</p>
                <p><strong>Tr·∫°ng th√°i:</strong> ‚ùå ƒê√£ t·ª´ ch·ªëi</p>
              </div>
            ))
          )}
        </div>
      </div>
    </div>
  );
};

export default NotificationAndReport;

