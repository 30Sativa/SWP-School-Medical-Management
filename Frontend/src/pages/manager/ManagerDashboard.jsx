import React, { useEffect, useState } from "react";
import "../../assets/css/ManagerDashboard.css";

const ManagerDashboard = () => {
  const [stats, setStats] = useState([]);
  const [notifications, setNotifications] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

//   useEffect(() => {
//     async function fetchDashboardData() {
//       try {
//         setLoading(true);

//         // Fetch th·ªëng k√™
//         const statsResponse = await fetch("/api/dashboard/stats");
//         if (!statsResponse.ok) throw new Error("L·ªói t·∫£i d·ªØ li·ªáu th·ªëng k√™");
//         const statsData = await statsResponse.json();

//         // Fetch th√¥ng b√°o
//         const notiResponse = await fetch("/api/dashboard/notifications");
//         if (!notiResponse.ok) throw new Error("L·ªói t·∫£i d·ªØ li·ªáu th√¥ng b√°o");
//         const notiData = await notiResponse.json();

//         setStats(statsData);
//         setNotifications(notiData);
//         setError(null);
//       } catch (err) {
//         setError(err.message || "C√≥ l·ªói x·∫£y ra khi t·∫£i d·ªØ li·ªáu");
//       } finally {
//         setLoading(false);
//       }
//     }

//     fetchDashboardData();
//   }, []);

useEffect(() => {
  // Gi·∫£ l·∫≠p d·ªØ li·ªáu sau 1 gi√¢y
  setLoading(true);
  setTimeout(() => {
    setStats([
      { title: "Ca kh√°m h√¥m nay", value: "48" },
      { title: "Nh√¢n vi√™n y t·∫ø", value: "12" },
      { title: "Thu·ªëc c√≥ s·∫µn", value: "156" },
      { title: "H·ªì s∆° s·ª©c kh·ªèe", value: "1,248" },
    ]);
    setNotifications([
      {
        title: "C·∫£nh b√°o d·ªãch b·ªánh",
        description:
          "Ph√°t hi·ªán c√°c ca c√∫m A/H1N1 t·∫°i tr∆∞·ªùng, c·∫ßn theo d√µi ch·∫∑t ch·∫Ω",
        time: "2 gi·ªù tr∆∞·ªõc",
      },
      {
        title: "L·ªãch ti√™m ch·ªßng",
        description:
          "Chi·∫øn d·ªãch ti√™m v·∫Øc-xin ph√≤ng b·ªánh s·∫Ω di·ªÖn ra v√†o ng√†y 05/06/2025",
        time: "4 gi·ªù tr∆∞·ªõc",
      },
      {
        title: "Kh√°m s·ª©c kh·ªèe ƒë·ªãnh k·ª≥",
        description:
          "L·ªãch kh√°m s·ª©c kh·ªèe ƒë·ªãnh k·ª≥ cho h·ªçc sinh kh·ªëi 10 v√†o tu·∫ßn sau",
        time: "1 ng√†y tr∆∞·ªõc",
      },
    ]);
    setLoading(false);
  }, 1000);
}, []);


  if (loading)
    return (
      <div className="manager-dashboard-loading">
        ƒêang t·∫£i d·ªØ li·ªáu, vui l√≤ng ch·ªù...
      </div>
    );

  if (error)
    return (
      <div className="manager-dashboard-error">
        L·ªói: {error}
      </div>
    );

  return (
    <div className="manager-dashboard">
      {/* Sidebar */}
      <aside className="sidebar">
        <div className="sidebar-logo">EduHealth</div>
        <div className="sidebar-profile">
          <img src="/search-image.png" alt="User avatar" className="avatar" />
          <div className="profile-info">
            <p className="profile-name">L√™ Th·ªã B√≠ch Ng·ªçc</p>
            <p className="profile-role">Qu·∫£n l√Ω</p>
          </div>
        </div>
        <nav className="sidebar-nav">
          <button className="nav-btn active">B·∫£ng ƒëi·ªÅu khi·ªÉn</button>
          <button className="nav-btn">Nh·∫≠t k√Ω ho·∫°t ƒë·ªông</button>
          <button className="nav-btn">Danh s√°ch ng∆∞·ªùi d√πng</button>
          <button className="nav-btn">Blog</button>
          <button className="nav-btn">B√°o c√°o th·ªëng k√™</button>
        </nav>
        <button className="sidebar-collapse">Thu g·ªçn &lt;</button>
      </aside>

      {/* Main content */}
      <div className="main-content">
        {/* Header */}
        <header className="header">
          <div className="search-box">
            <input type="text" placeholder="T√¨m ki·∫øm..." />
          </div>
          <div className="header-right">
            <button className="icon-btn" title="Tr·ª£ gi√∫p">?</button>
            <button className="icon-btn" title="Th√¥ng b√°o">üîî</button>
            <div className="user-info">
              <img src="/search-image-1.png" alt="User avatar" className="avatar" />
              <span className="user-name">L√™ Th·ªã B√≠ch Ng·ªçc</span>
              <button className="dropdown-btn">‚ñº</button>
            </div>
          </div>
        </header>

        {/* Dashboard sections */}
        <main className="dashboard-main">
          {/* Welcome banner */}
          <section className="welcome-banner">
            <h1>Xin ch√†o, B√≠ch Ng·ªçc!</h1>
            <p>Ch√†o m·ª´ng quay tr·ªü l·∫°i v·ªõi h·ªá th·ªëng qu·∫£n l√Ω h·ªçc ƒë∆∞·ªùng.</p>
          </section>

          {/* Stats cards */}
          <section className="stats-cards">
            {stats.map((stat, idx) => (
              <div key={idx} className="stat-card">
                <p className="stat-title">{stat.title}</p>
                <p className="stat-value">{stat.value}</p>
              </div>
            ))}
          </section>

          {/* Notifications */}
          <section className="notifications">
            <h2>Th√¥ng b√°o m·ªõi</h2>
            {notifications.map((note, idx) => (
              <div key={idx} className="notification-item">
                <h3>{note.title}</h3>
                <p>{note.description}</p>
                <span className="notification-time">{note.time}</span>
              </div>
            ))}
          </section>
        </main>
      </div>
    </div>
  );
};

export default ManagerDashboard;
